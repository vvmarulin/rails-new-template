# frozen_string_literal: true

require 'bundler'

# Main function that executes all other functions to generate new rails app
def apply_rails_new_template
  assert_generator_use_postgresql
  skip_libraries_installation

  apply_template 'LICENSE'
  apply_template 'README.md'
  apply_template 'gitignore', '.gitignore'

  apply_template 'ruby-version', '.ruby-version'
  apply_template 'Gemfile'

  apply_template 'env.example'
  apply_template 'env.example', '.env'
  apply_template 'docker-compose.yml'

  run_with_clean_bundler_env 'bundle install'
  run_with_clean_bundler_env 'bin/rails webpacker:install'
  run_with_clean_bundler_env 'docker-compose up -d'

  setup_git
end

# Check if PostgreSQL was used as a default database by rails new command
def assert_generator_use_postgresql
  return if IO.read('Gemfile') =~ /^\s*gem ['"]pg['"]/

  raise(
    Rails::Generators::Error,
    'PostgreSQL is required, use `--database=postgresql` with `rails new`'
  )
end

# We're going to handle bundler and webpacker ourselves. Setting these options
# will prevent Rails from running them unnecessarily.
def skip_libraries_installation
  self.options = options.merge(
    skip_bundle: true,
    skip_webpack_install: true
  )
end

def apply_template(source, result = nil)
  template("templates/#{source}", result || source, force: true)
end

# Helper method for keeping version of gems as they were initially generated by
# rails new command
def gemfile_requirement(name)
  @original_gemfile ||= IO.read('Gemfile')
  req = @original_gemfile[/gem\s+['"]#{name}['"]\s*(,[><~= \t\d\.\w'"]*)?.*$/, 1]
  req && req.gsub("'", %(")).strip.sub(/^,\s*"/, ', "')
end

def setup_git
  git :init
  git checkout: '-b master'
  git add: '-A .'
  git commit: "-n -m 'Set up project'"
end

def run_with_clean_bundler_env(cmd)
  success =
    if Bundler.respond_to?(:with_unbundled_env)
      Bundler.with_unbundled_env { run(cmd) }
    else
      Bundler.with_clean_env { run(cmd) }
    end

  return if success

  raise Rails::Generators::Error, "Command failed, exiting: #{cmd}"
end
